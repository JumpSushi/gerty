name: GERTY Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          portaudio19-dev \
          python3-pyaudio \
          libopencv-dev \
          alsa-utils \
          pulseaudio
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install portaudio
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Install core dependencies first
        pip install opencv-python numpy requests pytest pytest-mock
        
        # Try to install audio dependencies, but don't fail if they don't work
        pip install pyaudio || echo "PyAudio installation failed, will use mocks"
        pip install SpeechRecognition || echo "SpeechRecognition installation failed, will use mocks"
        pip install pvporcupine || echo "Porcupine installation failed, will use mocks"
    
    - name: Test dependency availability
      run: |
        python -c "
        import importlib
        deps = ['cv2', 'numpy', 'requests', 'pytest']
        for dep in deps:
            try:
                if dep == 'cv2':
                    importlib.import_module('cv2')
                else:
                    importlib.import_module(dep)
                print(f'✅ {dep} available')
            except ImportError:
                print(f'❌ {dep} not available')
        
        # Test optional audio dependencies
        optional_deps = ['pyaudio', 'speech_recognition', 'pvporcupine']
        for dep in optional_deps:
            try:
                importlib.import_module(dep)
                print(f'✅ {dep} available')
            except ImportError:
                print(f'⚠️  {dep} not available (will be mocked)')
        "
    
    - name: Run tests with mocks (safe)
      run: |
        python -m pytest test_gerty_simple_voice.py -m "not audio and not porcupine and not slow" -v --tb=short
    
    - name: Run audio tests (if available)
      continue-on-error: true
      run: |
        python -m pytest test_gerty_simple_voice.py -m "audio" -v --tb=short
    
    - name: Test GERTY import
      run: |
        python -c "
        try:
            from gerty_simple_voice import GERTYSimpleVoice
            print('✅ GERTY can be imported successfully')
        except ImportError as e:
            print(f'⚠️  GERTY import issues (expected in CI): {e}')
        "
    
    - name: Generate test report
      if: always()
      run: |
        echo "## Test Results for ${{ matrix.os }} Python ${{ matrix.python-version }}" >> test_results.md
        python -m pytest test_gerty_simple_voice.py --collect-only -q >> test_results.md || true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: test_results.md

  test-without-audio:
    runs-on: ubuntu-latest
    name: Test without audio dependencies
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install minimal dependencies only
      run: |
        python -m pip install --upgrade pip
        pip install opencv-python numpy requests pytest pytest-mock
        # Deliberately don't install audio dependencies
    
    - name: Run tests without audio dependencies
      run: |
        python -m pytest test_gerty_simple_voice.py -m "not audio and not porcupine" -v --tb=short
    
    - name: Verify mocking works
      run: |
        python -c "
        # Test that our mocks work even without real dependencies
        import sys
        print('Testing conftest.py mocking...')
        
        # This should work even without pyaudio installed
        try:
            from conftest import mock_pyaudio, mock_porcupine, mock_speech_recognition
            print('✅ Mock fixtures can be imported')
        except ImportError as e:
            print(f'❌ Mock import failed: {e}')
            sys.exit(1)
        
        print('✅ All mocks work correctly without audio dependencies')
        "

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run black (code formatting)
      run: black --check --diff .
      continue-on-error: true
    
    - name: Run isort (import sorting)
      run: isort --check-only --diff .
      continue-on-error: true
    
    - name: Run flake8 (linting)
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true
